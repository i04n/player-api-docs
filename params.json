{"name":"Player-api-docs","tagline":"","body":"# streamrail video player for web\r\n\r\n![streamrail logo](https://avatars2.githubusercontent.com/u/8501254?v=3&s=200)\r\n\r\n\r\n## Quickstart\r\n\r\nDive into the live samples (source available on the [github repo](https://github.com/streamrail/player-api-docs/blob/master/app/examples/)):\r\n\r\n- [minimalistic html5 vast tag integration](http://sdk.streamrail.com/vast-inspector/examples/minimal_js.html) (html5, web & mobile web)\r\n- [minimalistic flash vpaid tag integration](http://sdk.streamrail.com/vast-inspector/examples/minimal_flash.html) (javascript & flash)\r\n- [a sequence of two html5 players with different skip policies](http://sdk.streamrail.com/vast-inspector/examples/two_players_sequence_html5.html)\r\n- [a sequence of two flash players with different skip policies](http://sdk.streamrail.com/vast-inspector/examples/two_players_sequence_flash.html)\r\n\r\nTo run the examples on your machine, clone the repo and install the package deps:\r\n```\r\n$ git clone https://github.com/streamrail/player-api-docs.git\r\n$ cd player-api-docs && npm install\r\n```\r\n\r\nthen run a local connect server:\r\n```\r\ngrunt connect\r\n```\r\n\r\nyou can now browse to the examples at localhost (e.g. http://localhost:8000/app/examples/minimal_js.html)\r\n\r\n## Overview\r\n\r\n\r\n### General\r\n\r\nTo get an instance of the player, supply the ID of the container, and a configuration object:\r\n\r\n\tvar player = SR('ad-container1', {\r\n\t\ttech: 'html5',\r\n\t\tcompanion: false,\r\n\t\tautoplay: true,\r\n\t\twidth: 778,\r\n\t\theight: 468,\r\n\t\tcontent: { // optionally show a content video after the ad\r\n          url:'https://sdk.streamrail.com/demos/debugger/nasa_is_with_you_when_you_fly.mp4',\r\n          id: 'nasa_is_with_you_when_you_fly.mp4',\r\n          title: 'Nasa Video',\r\n          description: 'Cool video by nasa',\r\n          keywords: 'space,nasa',\r\n          categories: 'science'\r\n\t    },\r\n\t\tads: {\r\n\t\t\turl: 'sample_files/vast.xml',\r\n\t\t\tskip: {\r\n\t\t\t\tenabled: true\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t\r\nEvents are emitted from the player. For a complete list check out the list of events on the flash/html5 APIs. You can subscribe to events like this:\r\n\r\n\t\t// subscribe to the AdVideoStart event\r\n\t\tplayer.on('AdVideoStart', function(eventDetails) {\r\n\t\t\tconsole.log('ad video has actually started');\r\n\t\t});\r\n\t\t\r\n\t\t// subscribe to multiple events\r\n\t\t['AdLoaded',\r\n\t\t'AdStarted',\r\n\t\t'AdVolumeChange',\r\n\t\t'AdImpression',\r\n\t\t'AdVideoStart',\r\n\t\t'AdVideoFirstQuartile',\r\n\t\t'AdVideoMidpoint',\r\n\t\t'AdVideoThirdQuartile',\r\n\t\t'AdVideoComplete',\r\n\t\t'AdClickThru',\r\n\t\t'AdUserClose',\r\n\t\t'AdPaused',\r\n\t\t'AdPlaying',\r\n\t\t'AdError',\r\n\t\t'AdSkipped',\r\n\t\t'AdLoadTimeout']\r\n\t\t\t.map(function(eventName) {\r\n\t\t\t\tplayer.on(eventName, function(eventDetails) {\r\n\t\t\t\t\tconsole.log(eventName + ' from player ' + player.sessionID);\r\n\t\t\t\t});\r\n\t\t});\r\n\t\t\r\nThe player also exposes functions. For a complete list check out the list of events on the flash/html5 APIs. \r\n\r\n\tif (player.getTime() > 30) {\r\n\t\t// do something after the video has been playing for 30 sec\r\n\t}\r\n\t\r\n\t// don't allow muting before 10 sec have passed\r\n\tvar ticker = setInterval(function() {\r\n\t\tif (player().getTime() < 10) {\r\n\t\t\tif (player.muted()) {\r\n\t\t\t\tplayer.unmute();\r\n\t\t\t} \r\n\t\t} else {\r\n\t\t\tclearInterval(ticker)\r\n\t\t}\r\n\t}, 100);\r\n\t\r\nThe HTML5 API only supports VAST tags, as VPAID tags often return flash or content otherwise problematic for the HTML5 environment. \r\n\r\nWhen using a VPAID tag (for web), set the tech to \"flash\". when using VAST tags (for web and mobile), use either \"html5\" (for web or mobile) or \"flash\" (for web only).\r\n\r\n\tvar player1 = SR('ad-container1', {\r\n\t\ttech: 'flash', // ad tag can be either VAST or VPAID\r\n\t\t...\r\n\t\t...\r\n\t\t..\r\n\t});\r\n\r\n\tvar player2 = SR('ad-container1', {\r\n\t\ttech: 'html5', // ad tag has to be VAST\r\n\t\t...\r\n\t\t...\r\n\t\t..\r\n\t});\r\n\r\n## Video Content\r\n\r\nContent and ads can be used independantly of each other (i.e. you can try to get ads from an ad server without having content, and of course, you can render content videos without showing ads). \r\n\r\nThe optional content node, if used, has only one mandatory parameter - the source url of the video. The rest of the parameters are optional, but are recommended if you are using ads, as they are reported to the ad servers.\r\n\r\n\tvar player = SR('ad-container1', {\r\n\t\ttech: 'html5',\r\n\t\tcompanion: false,\r\n\t\tautoplay: true,\r\n\t\twidth: 778,\r\n\t\theight: 468,\r\n\t\tcontent: { // optionally show a content video after the ad\r\n          url:'https://sdk.streamrail.com/demos/debugger/nasa_is_with_you_when_you_fly.mp4',\r\n          id: 'nasa_is_with_you_when_you_fly.mp4',\r\n          title: 'Nasa Video',\r\n          description: 'Cool video by nasa',\r\n          keywords: 'space,nasa',\r\n          categories: 'science'\r\n\t    }\r\n\t});\r\n\r\n\t\r\n## Flash Tech API\r\n\r\nIf you are using VPAID ad tags, you have to use flash tech on the player. \r\n\r\n\tvar player = SR('ad-container1', {\r\n\t\ttech: 'flash',\r\n\t\t...\r\n\t\t...\r\n\t});\r\n\r\n### Basic functions\r\n\r\n- id() - get player DOM element ID. e.g. \"sr-player-ad22f244-e0d9-35e4-bdd4-97ebbd3367b5\"\r\n- play() - start playing video if not already playing\r\n- pause() - pause video \r\n- resume() - resume video\r\n- mute() - mute video\r\n- unmute() - umute video\r\n- dispose() - remove the instance of player from the page and turn off the events for this instance\r\n- stop() - stop video\r\n- seek(time) - seek to time\r\n- getVolume() - get current volume\r\n- setVolume(n) - set volume to n\r\n- getTime() - get current time in video\r\n- isPaused() - is the video currently paused?\r\n- isPlaying() - is the video currently playing?\r\n- isFullscreen() - is the video currently in full screen mode?\r\n- toggleFullscreen() - set the video fullscreen/not full screen\r\n- isLoaded() - is the player ready, all the swf's were loaded\r\n- hide() - hide player\r\n- show() - show player\r\n- isHidden() - is the player currently hidden\r\n- getClip() - get the content video that's currently set \r\n- getPlaylist() - get the playlist of content video's currently set\r\n\r\n\r\n### Properties\r\n- sessionID - unique GUID to set this session apart from other possible players being used on the same page \r\n\r\n### Events\r\n\r\n**Video Events**\r\n\r\n- onBegin\r\n- onFinish\r\n- onLastSecond\r\n- onMetaData\r\n- onMetaDataChange\r\n- onPause\r\n- onResized\r\n- onResume\r\n- onSeek\r\n- onStart\r\n- onStop\r\n- onUpdate\r\n- onBufferEmpty\r\n- onBufferFull\r\n- onBufferStop\r\n\r\n**Player Events**\r\n\r\n- onBeforeClick\r\n- onLoad\r\n- onUnload\r\n- onMouseOver\r\n- onMouseOut\r\n- onKeyPress\r\n- onVolume\r\n- onMute\r\n- onUnmute\r\n- onFullscreen\r\n- onFullscreenExit\r\n- onClipAdd\r\n- onPlaylistReplace\r\n- onError\r\n\r\n**Ad Events**\r\n\r\nfor a description of ad events, please refer to the [IAB spec](http://www.iab.net/guidelines/508676/digitalvideo/vsuite/vast)\r\n\r\n- AdLoaded\r\n- AdStarted\r\n- AdStopped\r\n- AdLinearChange\r\n- AdExpandedChange\r\n- AdRemainingTimeChange\r\n- AdVolumeChange\r\n- AdImpression\r\n- AdVideoStart\r\n- AdVideoFirstQuartile\r\n- AdVideoMidpoint\r\n- AdVideoThirdQuartile\r\n- AdVideoComplete\r\n- AdClickThru\r\n- AdUserAcceptInvitation\r\n- AdUserMinimize\r\n- AdUserClose\r\n- AdPaused\r\n- AdPlaying\r\n- AdLog\r\n- AdError\r\n- AdSkipped\r\n- AdSizeChange\r\n- AdSkippableStateChange\r\n- AdDurationChange\r\n- AdInteraction\r\n\r\n**Setting up VAST2-VPAID ad tags**\r\n\r\nto specify ads to the flash player, you need to define the ad schedule (pre-roll, mid-roll, etc.). the following is an example of setting up a preroll:\r\n\r\n\tads: {\r\n\t\t\tpauseOnClickThrough: true,\r\n\t\t\tschedule: [{\r\n\t\t\t\tposition: 'pre-roll',\r\n\t\t\t\tserver: {\r\n\t\t\t\t\ttype: 'direct',\r\n\t\t\t\t\ttag: 'https://ad4.liverail.com/?LR_PUBLISHER_ID=1331&LR_SCHEMA=vast2-vpaid'.replace(/&/g, '__amp__')\r\n\t\t\t\t}\r\n\t\t\t}]\r\n\t}\r\n\r\n## HTML5 API\r\n\r\nIf you are using VAST ads (not VPAID), then you may use HTML5 tech. If you are working with mobile web sites, use this option. \r\n\r\n\r\n\tvar player = SR('ad-container1', {\r\n\t\ttech: 'html5',\r\n\t\t...\r\n\t\t...\r\n\t});\r\n\r\n\r\n### Basic functions\r\n\r\n- autoplay(autoplay) - set autoplay true/false\r\n- bufferedPercent() - how much of the video is buffered (e.g. 25%)\r\n- controls(show) - show or hide controls (e.g. controls(false) to hide)\r\n- currentSrc() -  get the current source of the video\r\n- currentTime() -  get the current time of the video\r\n- dispose() - remove the instance of player from the page and turn off the events for this instance\r\n- duration() - get the duraion of the video being played \r\n- ended(callback) - do something when the video ends\r\n- exitFullscreen() - exit full screen if full screen is being used\r\n- isFullscreen() - is full screen begin used?\r\n- loop(doLoop) - loop or unloop the video\r\n- muted() - is the video muted?\r\n- pause() - pause the video\r\n- paused() - is the video paused?\r\n- play() - play the video if not already playing \r\n- poster(src) - set or get the poster attribute of the video\r\n- remainingTime() - how much time is left to the video to end\r\n- requestFullscreen() - request full screen (HTML5 API)\r\n- volume(n) - set or get the volume\r\n- height(h) - set or get the video's height\r\n- hide() - hide video\r\n- id() - get the GUID of the video container\r\n- show() - show the video if hidden\r\n- width() - set or get the video's width\r\n\r\n### Properties\r\n- sessionID - unique GUID to set this session apart from other possible players being used on the same page \r\n\r\n\r\n### Player Events\r\n\r\n- durationchange\r\n- ended\r\n- error\r\n- firstplay\r\n- fullscreenchange\r\n- loadedalldata\r\n- loadeddata\r\n- loadedmetadata\r\n- loadstart\r\n- pause\r\n- play\r\n- progress\r\n- seeked\r\n- seeking\r\n- timeupdate\r\n- volumechange\r\n- waiting\r\n- resize \r\n\r\n**Ad Events**\r\n\r\nfor a description of ad events, please refer to the [IAB spec](http://www.iab.net/guidelines/508676/digitalvideo/vsuite/vast)\r\n\r\n- AdLoaded\r\n- AdStarted\r\n- AdImpression\r\n- AdVideoStart\r\n- AdVideoFirstQuartile\r\n- AdVideoMidpoint\r\n- AdVideoThirdQuartile\r\n- AdVideoComplete\r\n- AdClickThru\r\n- AdPaused\r\n- AdPlaying\r\n\r\n\r\n**Setting up VAST ad tags**\r\n\r\nJust specify an ads object when initializing the player. you can optionally add skip button configurations, or disable skipping.\r\n\r\n\t\tvar player1 = SR('ad-container1', {\r\n\t\ttech: 'html5',\r\n\t\tcompanion: false,\r\n\t\tautoplay: true,\r\n\t\twidth: 778,\r\n\t\theight: 468,\r\n\t\tads: {\r\n\t\t\turl: '../sample_files/vast.xml',\r\n\t\t\tskip: {\r\n\t\t\t\tenabled: true,\r\n\t\t\t\tbtnText: 'Continue',\r\n\t\t\t\tseconds: 5\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\r\n","google":"UA-54018718-11","note":"Don't delete this file! It's used internally to help with page regeneration."}